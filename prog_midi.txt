autowatch = 1;

// Chord to MIDI mapping (simplified version)
var chordToMidi = {
    "Cmaj": [60, 64, 67],
    "Am": [57, 60, 64],
    "Fmaj": [65, 69, 72],
    "Gmaj": [67, 71, 74],
    "Cmaj7": [60, 64, 67, 71],
    "Am7": [57, 60, 64, 67],
    "D7": [62, 66, 69, 72],
    "G7": [67, 71, 74, 77],
    "Fmaj7": [65, 69, 72, 76],
    "C7": [60, 64, 67, 70],
    "F7": [65, 69, 72, 75],
    "Bb7": [70, 74, 77, 80],
};

// Markov chains for genres
var markovChains = {
    "Pop": {
        "Cmaj": ["Am", "Fmaj", "Gmaj"],
        "Am": ["Fmaj", "Gmaj", "Cmaj"],
        "Fmaj": ["Cmaj", "Gmaj", "Am"],
        "Gmaj": ["Cmaj", "Am", "Fmaj"]
    },
    "Rock": {
        "Cmaj": ["Gmaj", "Fmaj", "Am"],
        "Gmaj": ["Am", "Fmaj", "Cmaj"],
        "Am": ["Cmaj", "Fmaj"],
        "Fmaj": ["Gmaj", "Cmaj"]
    },
    "Jazz": {
        "Cmaj7": ["Am7", "D7", "G7"],
        "Am7": ["D7", "G7"],
        "D7": ["G7", "Cmaj7"],
        "G7": ["Cmaj7", "Am7"],
        "Fmaj7": ["Cmaj7", "Bdim7"]
    },
    "Blues": {
        "C7": ["F7", "G7"],
        "F7": ["C7", "G7"],
        "G7": ["C7", "F7"],
        "Bb7": ["F7", "G7"]
    }
};

// Function to output only MIDI values
function progMidi(chord, genre) {
    var progression = [chord];
    var current = chord;
    var chain = markovChains[genre];

    if (chain && chain[current]) {
        for (var i = 0; i < 3; i++) {
            var nextOptions = chain[current];
            var next = nextOptions[Math.floor(Math.random() * nextOptions.length)];
            progression.push(next);
            current = next;
        }
    } else {
        progression.push("(no data)");
    }

    // Convert progression to MIDI note arrays
    var midiProgression = progression.map(function(chordName) {
        return chordToMidi[chordName] || [];
    });

    // Output MIDI values
    outlet(0, midiProgression);
}
